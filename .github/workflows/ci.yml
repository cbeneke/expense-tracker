name: CI

on:
  pull_request:
    branches: [ main ]

jobs:
  changes:
    runs-on: ubuntu-latest
    permissions:
      pull-requests: read
    outputs:
      frontend: ${{ steps.filter.outputs.frontend }}
      backend: ${{ steps.filter.outputs.backend }}
    steps:
      - uses: actions/checkout@v4
        with:
          token: ${{ github.token }}

      - uses: dorny/paths-filter@v2
        id: filter
        with:
          filters: |
            frontend:
              - 'frontend/**'
            backend:
              - 'backend/**'

  frontend:
    needs: changes
    if: ${{ needs.changes.outputs.frontend == 'true' }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          token: ${{ github.token }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: frontend/package-lock.json

      - name: Install frontend dependencies
        working-directory: frontend
        run: npm ci

      - name: Run frontend linter
        working-directory: frontend
        run: npm run lint

  backend:
    needs: changes
    if: ${{ needs.changes.outputs.backend == 'true' }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          token: ${{ github.token }}

      - name: Setup Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.22'
          cache: true
          cache-dependency-path: backend/go.sum

      - name: Install golangci-lint
        run: curl -sSfL https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh | sh -s -- -b $(go env GOPATH)/bin v1.55.2

      - name: Run backend linter
        working-directory: backend
        run: golangci-lint run ./...

      - name: Run backend tests
        working-directory: backend
        run: go test ./... -v

  docker-build:
    needs: [changes, frontend, backend]
    if: |
      always() &&
      (needs.changes.outputs.frontend == 'true' || needs.changes.outputs.backend == 'true') &&
      (needs.frontend.result == 'success' || needs.frontend.result == 'skipped') &&
      (needs.backend.result == 'success' || needs.backend.result == 'skipped')
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          token: ${{ github.token }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build frontend
        if: needs.changes.outputs.frontend == 'true'
        uses: docker/build-push-action@v5
        with:
          context: ./frontend
          push: false
          tags: expense-tracker-frontend:pr
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Build backend
        if: needs.changes.outputs.backend == 'true'
        uses: docker/build-push-action@v5
        with:
          context: ./backend
          push: false
          tags: expense-tracker-backend:pr
          cache-from: type=gha
          cache-to: type=gha,mode=max